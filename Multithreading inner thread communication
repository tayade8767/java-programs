
////   it is doing using the synchronization in multithreading

class Mydata
{
     boolean flag=true;
     int value;
    synchronized void setdata(int v)
     {
          while(flag!=true)
          {
            try
            {
                wait();
            }
            catch(Exception e)
            {
                System.out.println(e);
            }
          }
          value=v;
          flag=false;
          notify();
     }
   synchronized  int getdata()
     {
        while(flag!=false)
        {
            try
            {
                wait();
            }
            catch(Exception e)
            {
                System.out.println(e);
            }
        }
        flag=true;
        notify();
        return value;
     }
}
class Producer extends Thread
{
     Mydata d;
     Producer(Mydata obj)
     {
        d=obj;
     }
     public void run()
     {
        int i=0;
        while(true)
        {
           d.setdata(i);
           System.out.println("Producer:"+i);
           i++;
        }    
     }
}
class Consumer extends Thread
{
    Mydata d;
    Consumer(Mydata obj)
    {
        d=obj;
    }
    public void run()
    {
        while(true)
        {
            int t=d.getdata();
            System.out.println("Consumer:"+t);
        }
    }
}

public class Multithreading_InnerThread_communication 
{
    public static void main(String args[])
    {
         Mydata d=new Mydata();
         Producer p=new Producer(d);
         Consumer c=new Consumer(d);
         p.start();
         c.start();
    }
}
