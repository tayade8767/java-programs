// it is the example for the ATM machine
// let the person finished the work and then other person can go inside for the work like the Withdraw check bank balance etc 
// It is the Student challange 








class ATM
{
  synchronized public void Withdraw(String str)
    {
        for(int i=0;i<str.length();i++)
        {
            System.out.print(str.charAt(i));
        }
        //System.out.println("withdraw the money-----------------------------------------------------");
    }
   synchronized public void Creadit(String str)
    {
        for(int i=0;i<str.length();i++)
        {
            System.out.print(str.charAt(i));
        }
       // System.out.println("creadit the money=========================================================");
    }

}
class Person1 extends Thread
{
    ATM a;
    Person1(ATM obj)
    {
        a=obj;
    }
    public void run()
    {
        a.Withdraw("withdraw the money");
        a.Creadit("creadit the money");
    }
}

class Person2 extends Thread
{
    ATM a;
    Person2(ATM obj)
    {
        a=obj;
    }
    public void run()
    {
        a.Withdraw("withdraw the money");
        a.Creadit("creadit the money");
    }
}

public class multuthreading_ATM_example 
{
      public static void main(String args[])
      {
           ATM atm=new ATM();
           Person1 p1=new Person1(atm);
           Person2 p2=new Person2(atm);
           p1.start();
           p2.start();
      }   
}
